

using DrWatson, Plots, LaTeXStrings

gr()  # Use GR backend, but you can switch to PyPlot if needed
function ticks_length!(;tl=0.02)
    p = Plots.current()
    xticks, yticks = Plots.xticks(p)[1][1], Plots.yticks(p)[1][1]
    xl, yl = Plots.xlims(p), Plots.ylims(p)
    x1, y1 = zero(yticks) .+ xl[1], zero(xticks) .+ yl[1]
    sz = p.attr[:size]
    r = sz[1]/sz[2]
    dx, dy = tl*(xl[2] - xl[1]), tl*r*(yl[2] - yl[1])
    plot!([xticks xticks]', [y1 y1 .+ dy]', c=:black, labels=false)
    plot!([x1 x1 .+ dx]', [yticks yticks]', c=:black, labels=false, xlims=xl, ylims=yl)
    return Plots.current()
end
# Define data


T = 0.1
Î± = 0.5

#T = 5, alpha = 0.1, N_chain = 150, maxdim = 70, cutoff = -11, tau = 0.005, boson_dim = 11;
#quantum_2
mQ1 = [0.029596368403616822;
0.10261872876581503;
0.19014753811206275;
0.26184820179588547;
0.33666459297414153;
0.4066748342745693;
0.45769750300286466;
0.5007652080551597;
0.5580602204155476;
0.596669932213056;
0.6416079599516182;
0.6820483429618832;
0.7018554598828989;
0.6986428646567089;
0.7147764421428222;
0.7177052296022037;
0.7400770387474945;
0.753464477952771;
0.7785674316027462;
0.7925259471679095;
0.8035428465260719;
0.8105272618704527;
0.8150088688462784;
0.8218518369776808;
0.8262462421589523;
0.8289612458265572;
0.831994422973029;
0.8351941510068503;
0.8396189718093431;]

vQ1 = [0.0008768526306469748;
0.010540818671465238;
0.03619005288139189;
3.8630758098044695;
4.902838159029038;
5.483962011444934;
5.640322034258967;
5.860471702271631;
5.986718726084277;
6.0946648604535545;
6.187149635182519;
6.15851430953845;
6.089757771092232;
6.359390720653009;
6.2999721240456505;
5.213125098916553;
6.291823251829603;
5.788074284636833;
6.227041392876826;
5.799278364350657;
5.4589974375185415;
5.15398603779224;
4.97592619059834;
5.3399947770922696;
5.11863509674496;
4.914966769998225;
5.243388867996215;
5.047671144536448;
5.020000418052359;]


#


#T = 0.1, alpha = 0.1, N_chain = 150, maxdim = 70, cutoff = -11, tau = 0.005, boson_dim = 11;
#quantum_1
mQ2 = [-2.940968970725079e-10, 0.02956502027571864, 0.1021720078599101, 0.1881919991354862, 0.26737167397405126, 0.3361703836379086, 
0.34654495272240476, 0.43741731174346643, 0.4750555422096346, 0.5065561810462038, 0.533269447998438, 0.5561921077254244, 0.5760554975193561,
 0.5934267182582181, 0.6087347353068014, 0.6223080084907384, 0.6086346811208599, 0.6093505383778522, 0.6551285716571162, 0.6076752883752259, 
 0.6721356611419866, 0.6795250830379125, 0.6862926068262647, 0.6924959577786431, 0.6981999022493579, 0.7034567614674105, 0.7083024326689726,
  0.660421733010399, 0.716942978827963, 0.7208097703718626, 0.7244294985480353, 0.6736197653875071, 0.6761910112850836, 0.6607903475428724,
   0.6759611455933804, 0.6842792253508951, 0.6763119320591356, 0.6958266924442846, 0.6700733431133808, 0.7500100263833348, 0.6882868452325845,
    0.6875156249929811, 0.7654758099049959, 0.6973629600872671, 
0.7617149176185267, 0.7635112215933239, 0.7718929168963056, 0.7743608066101783, 0.7741692939964436, 0.7149063072508437, 0.7786127769633937]
vQ2 = [9.027387866221967e-20, 0.0008748509857108887, 0.01044749933013392, 0.03544259537029042, 3.662306679865938, 0.11308581382195892,
 3.075292400767091, 0.19145880087313982, 0.2258283708347382, 0.2567766074332358, 0.2845819751121633, 0.3095880638300052, 0.33211346048936125,
  0.3524662770381898, 0.3709075292516892, 0.38766044768113206, 3.567276623868815, 3.208262037197868, 0.4297001780454063, 2.7940899295612907,
   0.4523318028403185, 0.4623530910821785, 0.47162604509551537, 0.4802106452997509, 0.48817005831523436, 0.4955621377388377, 
   0.5024295924697422, 1.5738362263815906, 0.5147921635504276, 0.5203744355252127, 0.5448257036437468, 1.80681960122693, 2.239764950782718,
    1.5558629124031906, 1.7971520818463311, 2.058416690234614, 1.726230960089934, 2.558346063379364, 1.3498843227194033, 2.463174361828707, 
	1.931178209433431, 1.4464286056152529, 2.5770283547146837, 2.0692922105923204, 
0.56784714419539, 0.6437146760571453, 1.5044159081113102, 1.4516915850650471, 2.108710463141455, 2.180374332986758, 2.1731651103561167]
#

#T = 1, alpha = 1.0, N_chain = 150, maxdim = 80, cutoff = -11, tau = 0.005, boson_dim = 11;
#classical_1
mQ3 = [0.2951392460005204;
1.0177811686991844;
1.8663124349434062;
2.6368374062197066;
3.2666499385835133;
3.7432865666267854;
4.109279395444895;
4.3815450984955095;
4.584381212266793;
4.75291785067142;
4.855195046328424;
4.923741180795354;
4.997311609525227;
5.025482034717903;
5.071046230413466;
5.109273365908922;
5.115932212713956;
5.1464957398552365;
5.155387219020695;
5.16477429775545;
5.1684754234727395;
5.175841475343526;]

vQ3 = [3.5802475309821475;
15.53893748634772;
25.660815540862604;
34.24039927510627;
39.57781301337205;
42.56199398319936;
45.07926448806583;
46.706862970289826;
47.24423394280598;
45.92644372396378;
46.90888956967603;
48.8709367222052;
50.52145867547644;
49.746532718324474;
50.27875144169278;
49.87895649500792;
48.98026997715449;
50.489814712531015;
50.52275442827767;
50.437927405248516;
50.279663439684036;
50.48750033997221;]


#

#T = 0.1, alpha = 1.0, N_chain = 150, maxdim = 80, cutoff = -11, tau = 0.005, boson_dim = 11;
#classical_2
mQ4 = [0.2951536804728229;
1.0190637130933593;
1.7921915176919816;
2.645494915750195;
3.276634797836676;
3.769910846515751;
4.137695807338901;
4.40374530099626;
4.6158184289534905;
4.77906663222917;
4.898202993211059;
4.973275854980666;
5.034363226043734;
5.064803173834414;
5.123679383615678;
5.206889872333883;
5.2227633885959674;
5.2420553881731955;
5.230922718800182;
5.2365945432167305;
5.239059294521033;
5.208442594258825;
5.1988600091016846;
5.199753103116404;
5.225673747244945;
5.234778030236235;
5.238416535601753;
5.248909047064342;
5.24914904783486;
5.253888546254261;]

vQ4 = [3.6064597195131385;
15.370701411085902;
22.23064116226587;
34.0165095852527;
39.562448992145676;
43.239565337617236;
46.34526057817088;
47.54870110617904;
47.976705769882486;
47.75255499539726;
47.44203953743791;
46.951530022542805;
48.4914425015093;
47.395635003637295;
46.45899707784625;
46.41592207467218;
48.08315512428123;
50.110728005068125;
48.3694771490802;
48.27444823920236;
49.2995322331878;
48.27172158877019;
47.29427232835729;
47.177094555210466;
48.0882810321776;
48.16559158576657;
47.936412409051904;]
#

mQ1 = mQ1[1:22]
vQ1 = vQ1[1:22]
mQ2 = mQ2[1:22]
vQ2 = vQ2[1:22]
mQ3 = mQ3[1:22]
vQ3 = vQ3[1:22]
mQ4 = mQ4[1:22]
vQ4 = vQ4[1:22]

# Time step duration
tau = 0.005  
nt = 250
ttotal = nt * tau  # Total time evolution
#time_steps = collect(0:10*tau:ttotal)

time_steps = collect(0:lastindex(mQ3)-1)*10*tau

# Set tick positions and convert tick labels to LaTeX strings automatically
xticks = range(0, stop = maximum(time_steps), length = 5)
yticks1 = range(0, stop = 6, length = 5)
yticks2 = range(0, stop = 60, length = 5)
#= 
xtick_labels = [L"\$" * string(round(x, digits = 2)) * "\$" for x in xticks]
ytick_labels1 = [L"\$" * string(round(y, digits = 1)) * "\$" for y in yticks1]
ytick_labels2 = [L"\$" * string(round(y, digits = 1)) * "\$" for y in yticks2] =#

xtick_labels = [string(round(x, digits = 2)) for x in xticks]
ytick_labels1 = [string(round(y, digits = 1)) for y in yticks1]
ytick_labels2 = [string(round(y, digits = 1)) for y in yticks2]
 
p1 = plot(time_steps, mQ1, xaxis = L"t", yaxis = L"\langle Q \rangle", 
xticks = (xticks, xtick_labels), yticks = (yticks1, ytick_labels1),
xtickfont = font(12), ytickfont = font(12),
xguidefontsize=18,yguidefontsize=20, color = :orange,
seriesalpha = 0.9, linewidth = 4, legendfontsize = 12, label = L"\  \Delta = 1, T = 5.0, \alpha = 0.1")
plot!(time_steps, mQ2, color = :brown,seriesalpha = 0.9, linewidth = 4, label = L"\ \Delta = 1, T = 0.1, \alpha = 0.1")
scatter!(time_steps, mQ3, color = :green, m = :cross, markersize = 8, label = L"\ \Delta = 0, T = 1.0, \alpha = 1.0")
plot!(time_steps, mQ4, color = :blue,seriesalpha = 0.9, linewidth = 2, label = L"\ \Delta = 0, T = 0.1, \alpha = 1.0")
#= 
curves!(twinx(), x, 2 * cos.(x), yaxis = "Y label 2"; kw...)
 =#

 plot!(time_steps, vQ1/5, line = :dot, color = :orange, seriesalpha = 0.9, linewidth = 4, label = false)
 curves!(time_steps, vQ2/5, line = :dot, color = :brown,seriesalpha = 0.9, linewidth = 4, label = false)
 plot!(time_steps, vQ3/5, line = :dot, color = :green,seriesalpha = 0.9, linewidth = 4, label = false)
 plot!(twinx(),time_steps, vQ4/5, line = :dot, color = :blue,ytickfont = font(12),
 #yticks = (yticks2, ytick_labels2),
 seriesalpha = 0.9, linewidth = 4, label = false,yguidefontsize=20, yaxis = L"0.1\times\langle\langle Q^2 \rangle\rangle")


title!(L"\epsilon = 1")

#ticks_length!(tl=.04)

# Customize plot appearance, place legend inside
plot!(legend = :right, grid = false, legendposition = (.5, 0.6),legendfontsize = 15,framestyle = :box)
#plot(p1, framestyle = :box)
# Display and save the plot
display("image/png",p1)

#= file_name_png = "improved_plot_legend.png"
safesave(file_name_png, p1)  =#


